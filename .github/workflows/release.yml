name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.17"

      - name: Build
        run: |
          GOOS=linux GOARCH=amd64 go build -o corsy-linux-amd64
          GOOS=windows GOARCH=amd64 go build -o corsy-windows-amd64.exe
          GOOS=darwin GOARCH=amd64 go build -o corsy-darwin-amd64

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./corsy-${{ matrix.os }}-amd64${{ matrix.os == 'windows' && '.exe' || '' }}
          asset_name: corsy-${{ matrix.os }}-amd64${{ matrix.os == 'windows' && '.exe' || '' }}
          asset_content_type: application/octet-stream
